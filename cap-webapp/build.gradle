//archivesBaseName =''

buildscript {
    repositories {
        //flatDir dirs:  "${gradle.gradleHomeDir}/customPlugins"
		maven{
			url "http://10.10.50.24:8081/nexus/content/groups/public/"
		}
		//jcenter()
    }
	
	dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.3'
		classpath 'com.github:gradle-hotFix-plugin:1.0-SNAPSHOT'
    }
}

apply plugin: 'hotFix'
hotFix {
    // 配置增量存放目录和名称
    targetDir = "build/hotFix/${project.name}_hotfix_"+ new Date().format('yyyy-MM-dd_HHmm')
    svn {
        username = 'yangsai'
        password = 'yangsai'
    }
}

apply plugin: 'tomcat'

 def compatibilityVersion = 1.7
 sourceCompatibility = compatibilityVersion
 targetCompatibility = compatibilityVersion

tomcat {
    httpPort = 8090
    httpsPort = 8091
}

//设置TomcatRun任务属性
tomcatRun.contextPath="/web"
tomcatRun.webDefaultXml=file("$webAppDir/WEB-INF/web.xml")
[tomcatRun, tomcatRunWar]*.configFile = file('context.xml')
//tomcatRun.daemon=true
tomcatRun.URIEncoding="GBK"

//要求每个工程（除webApp本工程外）编译路径在bin下，编译路径改变，对应的下面的files数组里面的路径也要跟着变
tomcatRun.webAppClasspath=files([]) //'../view/bin','../codegen/bin','../metadata/bin','../runtime/bin','../common/bin'

dependencies{
    //tomcat
    def tomcatVersion = '7.0.42'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-log4j:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
    tomcat "org.apache.tomcat:dbcp:${tomcatVersion}"

	//compile project(':cap-graph-to-image')
    compile project(':cap-graph')
    compile project(':cap-common')
    compile project(':cap-runtime')
    compile project(':cap-metadata')
	compile project(':cap-codegen')
	compile project(':cap-view')
	compile project(':cap-document')
	compile project(':cap-fileload')
	compile project(':cap-test')
	//compile project(':cap-cdp')
	compile project(':cap-bm-fragment')
	
    //TOPjar包
  compile 'com.comtop.cap.runtime.top:comtop-top-extend-attr:' + topExtendAttrVersion
  compile 'com.comtop.cap.runtime.top:comtop-top-external-service:' + topExternalServiceVersion
  compile 'com.comtop.cap.runtime.top:comtop-top-post:' + topTopPostVersion
  compile 'com.comtop.cap.runtime.top:comtop-top-small-app:' + topSmallAppVersion
  compile 'com.comtop.cap.runtime.top:comtop-top-user-track:' + topUserTrackVersion
  compile 'com.comtop.cap.runtime.top:comtop-top-message:' + topMessageVersion
    
    //TOP基础平台
  compile 'javax.servlet:jstl:1.1.2'
  compile 'taglibs:standard:1.1.2'
  compile 'com.oracle.coherence:coherence:1.0'
  compile 'redis.clients:jedis:2.1.0'
  
  compile 'com.google.code:xmemcached:1.3.2'
  compile 'commons-configuration:commons-configuration:1.6'
  
    //EIC依赖jar包
    compile 'com.comtop.eic:eic-commons-jexl:2.0.1'
	compile 'com.comtop.eic:eic-commons-digester:2.0'
	compile 'com.comtop.eic:eic-commons-collections:3.2.1'
	compile 'com.comtop.eic:eic-commons-codec:1.5'
  
	compile 'javax.activation:activation:1.1'
	compile 'org.beanshell:bsh:2.0b4'
	compile 'springsource-beanutils:com.springsource.org.apache.commons.beanutils:1.8.0'
	compile 'springsource-asm:com.springsource.org.objectweb.asm:3.1.0'
	compile 'bpms-eim:comtop-bpms-sendeim:1.0'
	compile 'top-eim:eim-esponpen-client:3.6.2.RELEASE' //top与eim集成时需要使用
	compile 'xerces:xercesimpl:2.11.0'
	compile 'xml-apis:xml-apis:1.4.01'
	
	compile 'org.springframework:spring-aop:3.2.0.RELEASE'
	compile 'cglib:com.springsource.net.sf.cglib:2.2.0'
	compile 'org.springframework:spring-context-support:3.2.0.RELEASE'
	compile 'org.springframework:spring-jms:3.2.0.RELEASE'
	compile 'org.springframework:spring-oxm:3.2.0.RELEASE'
	compile 'org.springframework:spring-webmvc:3.2.0.RELEASE'	
	compile 'org.apache.bval:bval-jsr303:0.5'//引入validate校验包,解决服务器启动时的spring Bean Validation问题
	
	compile 'commons-httpclient:commons-httpclient:3.1'
	
	
	compile 'org.codehaus.woodstox:woodstox-core-asl:4.2.0'
	
	compile 'wsdl4j:wsdl4j:1.6.3'
	compile 'wss4j:wss4j:1.6.11'
	
	compile 'xml-resolver:xml-resolver:1.2'
	compile 'org.apache.ws.xmlschema:xmlschema-core:2.0.3'
	
	
	compile 'com.adobe.blazeds:flex-messaging-common:20150427'
	compile 'com.adobe.blazeds:flex-messaging-core:20150427'
	compile 'com.adobe.blazeds:flex-messaging-opt:20150427'
	compile 'com.adobe.blazeds:flex-messaging-proxy:20150427'
	compile 'com.adobe.blazeds:flex-messaging-remoting:20150427'
	compile 'com.adobe.blazeds:flex-rds-server:20150427'
	
	
	compile 'org.codehaus.groovy:groovy-all:1.7.5'
	compile 'org.apache.httpcomponents:httpcore:4.3.2'
	compile 'org.codehaus.jackson:jackson-all:1.6.2'
	compile 'org.jboss.logging:jboss-logging:3.1.0.GA'
	compile 'joda-time:joda-time:2.2'
	compile 'org.apache.neethi:neethi:3.0.2'
	compile 'de.odysseus.juel:juel-impl:2.2.4'
	compile 'opensymphony:quartz-all:1.8.6'
	
	//compile 'org.apache.ant:ant:1.7.0'
	//compile 'org.apache.ant:ant-launcher:1.7.0'
	//compile 'asm:asm:3.3.1'
	//compile 'backport-util-concurrent:backport-util-concurrent:3.1'
	compile 'org.jasig.cas:cas-client:1.0.0'
	//compile 'org.glassfish.jaxb:codemodel:2.2.11' 
	compile 'commons-codec:commons-codec:1.3'
	compile 'commons-dbcp:commons-dbcp:1.2'
	compile 'commons-io:commons-io:1.4'
	compile 'commons-pool:commons-pool:1.6'
	//compile 'com.comtop.mc:comtop_com.springsource.net.sf.cglib:2.2.0'
	//compile 'com.comtop.coref:comtop-scan:1.0'
	//top说SOA和TOP集成后，不需要这个jar包，soa单独使用则需要
	//compile 'com.comtop.soa:comtop-soa-exernal-service:1.0'
	
	compile 'org.apache.cxf:cxf:2.7.6' 
	//compile 'org.apache.cxf:cxf-api:2.7.6' 
	//compile 'org.apache.cxf:cxf-rt-bindings-soap:2.7.6' 
	//compile 'org.apache.cxf:cxf-rt-bindings-xml:2.7.6' 
	//compile 'org.apache.cxf:cxf-rt-core:2.7.6' 
	//compile 'org.apache.cxf:cxf-rt-databinding-jaxb:2.7.6' 
	//compile 'org.apache.cxf:cxf-rt-frontend-jaxws:2.7.6' 
    //compile 'org.apache.cxf:cxf-rt-frontend-simple:2.7.6'
    //compile 'org.apache.cxf:cxf-rt-transports-http:2.7.6' 
	//compile 'org.apache.cxf:cxf-rt-ws-addr:2.7.6'
	//compile 'org.apache.cxf:cxf-rt-ws-policy:2.7.6'
	
	//compile 'com.sun.xml.dtd-parser:dtd-parser:1.1'
	//compile 'directwebremoting:dwr:3.0'
	compile 'net.sf.ehcache:ehcache:1.6.2'
	compile 'com.comtop.eic:eic-commons-beanutils:1.8.3'
    compile 'com.comtop.eic:eic-poi-ooxml-schemas:3.9'
    compile 'com.comtop.eic:eic-poi-ooxml:3.9'
    compile 'com.comtop.eic:eic-poi:3.9'
    compile 'com.comtop.eic:eic-jxls-core:1.0.3'
    //compile 'com.sun.xml.fastinfoset:fastinfoset:1.2.13'
    //compile 'org.apache.geronimo.specs:geronimo-javamail_1.4_spec:1.7.1'
    compile 'org.apache.httpcomponents:httpclient:4.3.4'
   	compile '4A:isc_encrypt:1.0.0'
   	compile '4A:isc_sso_agent:1.0.0'
    //compile 'com.sun.istack:istack-commons-tools:2.21'
    //compile 'com.sun.istack:istack-commons-runtime:2.21'
   	compile 'org.codehaus.jackson:jackson-core-asl:1.6.2'
   	compile 'org.codehaus.jackson:jackson-mapper-asl:1.6.2'
   	compile 'com.jacob:jacob:1.17.0'
   	compile 'jdom:jdom:1.0'
   	compile 'org.bouncycastle:bcprov-jdk14:143'
   	 
   	//compile 'com.jcraft:jsch.agentproxy.connector-factory:0.0.7'
   	//compile 'com.jcraft:jsch.agentproxy.core:0.0.7'
   	//compile 'com.jcraft:jsch.agentproxy.pageant:0.0.7'
   	//compile 'com.jcraft:jsch.agentproxy.sshagent:0.0.7'
   	//compile 'com.jcraft:jsch.agentproxy.usocket-jna:0.0.7'
   	//compile 'com.jcraft:jsch.agentproxy.usocket-nc:0.0.7'
   	
    compile 'com.jcraft:jsch:0.1.49'
   // compile 'javax.servlet:jstl:1.1.2'
    //compile 'de.odysseus.juel:juel-api:2.2.4' 
    compile 'org.openoffice:juh:3.2.1'
    compile 'org.openoffice:jurt:3.2.1'
    compile 'log4j:log4j:1.2.15'
    compile "javax.mail:mail:1.4.5"
    compile '4A:org.json:1.0.0'
    compile 'javax.persistence:persistence:1.0'
    //compile 'net.java.dev.jna:platform:3.5.2'
    //compile 'rabbitmq:rabbitmq-client:3.2.4'
    //compile 'relaxngDatatype:relaxngDatatype:20020414'
    compile 'org.openoffice:ridl:3.2.1'
    //compile 'com.sun.xml.bind.external:rngom:2.2.11'
    //compile 'de.regnis.q.sequence:sequence-library:1.0.2'
    compile 'org.fusesource:sigar:1.6.4'
    //compile 'org.tmatesoft.sqljet:sqljet:1.1.10'
    compile 'stax:stax-api:1.0.1'
    //compile 'org.jvnet.staxex:stax-ex:1.7.7'
	compile 'org.codehaus.woodstox:stax2-api:3.1.1'
	compile 'javax.transaction:transaction:1.0.0.0_1-1'
	//compile 'com.trilead:trilead-ssh2:1.0.0-build217'
	//compile 'org.glassfish.jaxb:txw2:2.2.11'
    compile 'org.openoffice:unoil:3.2.1'
    //compile 'xom:xom:1.0'
    //compile 'com.sun.xsom:xsom:20140925'
    //compile 'net.java.dev.jna:jna:3.5.2'
    //compile 'xalan:xalan:2.6.0'
    compile 'commons-logging:commons-logging:1.1.1'
    //compile 'commons-chain:commons-chain:1.1'
    //compile 'commons-digester:commons-digester:1.8'
    //compile 'commons-validator:commons-validator:1.3.1'
    //compile 'oro:oro:2.0.8'
    //compile 'sslext:sslext:1.2-0'
    //compile 'org.apache.struts:struts-core:1.3.8'
    //compile 'org.apache.struts:struts-taglib:1.3.8'
    //compile 'org.apache.struts:struts-tiles:1.3.8'
	
	compile 'org.apache.poi:poi:3.12'
	compile 'org.apache.poi:poi-ooxml:3.12'
	compile 'org.apache.poi:poi-ooxml-schemas:3.12'
	//compile 'org.apache.poi:ooxml-schemas:1.1'
	compile 'org.apache.poi:poi-scratchpad:3.12'
	compile 'org.apache.velocity:velocity:1.6.4:dep'
	
//	compile 'com.comtop.cap.runtime.cui:json:1.0'
//	compile 'com.comtop.cap.runtime.cui:ueditor:1.1.0'
	
	//compile 'com.sun.xml.bind:jaxb-xjc:2.2.7'
	//compile 'com.sun.xml.bind:jaxb-core:2.2.7'


//----cdp ---start-----------
	compile 'commons-collections:commons-collections:3.2.2'
	//kubernetes客户端
	compile 'io.fabric8:kubernetes-client:1.3.100'
	//git客户端
	compile 'org.eclipse.jgit:org.eclipse.jgit:4.4.1.201607150455-r'
	compile 'cpdetector:cpdetector:1.0.7'
	//gitlab客户端
	compile 'org.gitlab:java-gitlab-api:1.2.5'

//----cdp ---end-----------
    tomcat 'javax:xml.ws:2.1.1'
    //避免将此包打包到War
    providedCompile 'javax.servlet:servlet-api:2.0'
    providedCompile 'javax.servlet:jsp-api:2.2'
    providedCompile 'de.odysseus.juel:juel-api:2.2.4'
	
}

ext{
	linkConfig = true
}

eclipse {
  wtp {
    component {
        classesDeployPath=sourceSets.main.output.classesDir
    }
  }
  
  project {
		file {
		
			//closure executed after .classpath content is loaded from existing file
		  	//and after gradle build information is merged
		  	whenMerged { eProject ->
		  		//根据要配置的资源链接的信息[链接名,链接类型,链接的目录,链接的url]，构建Link对象并加入eclipse.project(领域配置对象)中去
		  		//对应 eclipse中工程属性中的 resource->link resources里面的配置
		  		if(eclipse.hasProperty("requireLinks")) {
					eclipse.ext.requireLinks.each{
						eProject.linkedResources << new org.gradle.plugins.ide.eclipse.model.Link(it.name, it.type, it.location, it.locationUri)
					}		  		
		  		}
		  	}
		}
	}
	
  	classpath {
  		//若配置linkConfig为true则生成eclipse相关link的配置
  		if(project.hasProperty("linkConfig") && project.ext.linkConfig) {
  			//set eclipse source default output dir
    		defaultOutputDir = file("$webAppDirName/WEB-INF/classes")
    		
    		file {
  				//if you want to mess with the resulting XML in whatever way you fancy
  				//定制化生成的.classpath文件内容
	  			withXml {
	  				def node = it.asNode()
	  				//找到<classpathentry kind="src" path="src/main/resources"/>
	  				def srcCP = node.find{it.@kind=='src' && it.@path=='src/main/resources'}
					//println srcCP
		    		/*
		    		* 用于存放需要配置的资源链接，对应 eclipse中工程属性中的 resource->link resources里面的配置
		    		* 注意点：
		    		*	1、requireLinks需要在classpath这里创建和加入信息，在上面project里面在去访问，这是由于eclipse插件执行顺序导致的，eclipse执行顺序如下
		    		*	:cap-web:eclipseClasspath
					*	:cap-web:eclipseJdt
					*	:cap-web:eclipseProject
		    		*	2、这里不能使用project.ext.requireLinks，若使用的话在上面project会获取不到，原因暂时不知道，可能是由于闭包导致的。
		    		*/
		    		eclipse.ext.requireLinks = []
		    		//过滤掉当前项目
		    		rootProject.subprojects.findAll{it != project && it != project(':cap-graph-to-image') && it != project(':cap-bm-fragment')}.each{
		    			//增加<classpathentry kind="src" path="cap-fileload"/>这样节点配置，对应 eclipse中工程属性中的 java build path里面的source的配置
		    			def projectName = it.name
		    			//增加同级节点
						if(!node.find{it.@kind=='src' && it.@path=="$projectName-java"}) {
							//println "classpathentry:$projectName"
							srcCP.plus{
								classpathentry(kind: 'src', path: "$projectName-java")
								classpathentry(kind: 'src', path: "$projectName-resource")
							}
						}
		    			
		    			//增加子节点
						//node.appendNode('classpathentry', [kind: 'src', path: it.name+'-java'])
						//node.appendNode('classpathentry', [kind: 'src', path: it.name+'-resource'])
						
						it.sourceSets.main.java.srcDirs.each { srcDir ->
							//加入要配置的资源链接的信息[链接名,链接类型,链接的目录,链接的url]，对应 eclipse中工程属性中的 resource->link resources里面的配置
							eclipse.ext.requireLinks << [name:"$it.name-java", type:'2', location:srcDir.path, locationUri: null]
						}
						it.sourceSets.main.resources.srcDirs.each { srcDir ->
							eclipse.ext.requireLinks << [name:"$it.name-resource", type:'2', location:srcDir.path, locationUri: null]
						}
					}
					
					//找到<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6/"/>
					def javaCP = node.find{it.@kind=='con' && it.@path.indexOf('org.eclipse.jdt.launching.JRE_CONTAINER') > -1}
					if(javaCP) {
						javaCP.appendNode('accessrules').appendNode('accessrule',[kind: 'accessible',pattern:'com/sun/xml/**'])
					}
	  			}
	  		}
  		}
	}
}

/**
 * eclipse中webapp项目buildpath增加其他工程的java文件和resource路径
 */
task addProjectEClassPath << {
	def parser = new XmlParser()
	def classpathList = parser.parse(file(".classpath"))
	//找到<classpathentry kind="src" path="src/main/resources"/>
	def srcCP = classpathList.find{it.@kind=='src' && it.@path=='src/main/resources'}
	rootProject.subprojects.findAll{it != project && it != project(':cap-graph-to-image') && it != project(':cap-bm-fragment')}.each{
		def projectName = it.name
		//增加同级节点
		if(!classpathList.find{it.@kind=='src' && it.@path=="$projectName-java"}) {
			//println "classpathentry:$projectName"
			srcCP.plus{
				classpathentry(kind: 'src', path: "$projectName-java")
				classpathentry(kind: 'src', path: "$projectName-resource")
			}
		}
	}
	//写入.classpath文件
	file(".classpath").withWriter{ writer->
		groovy.xml.XmlUtil.serialize(classpathList, writer)
	}
}

//cap本身项目的jar名字 项目自身的jar包，如果jar名称改变，这里的脚本也需要变
ext.capJarName = ['comtop-cap-codegen.jar','comtop-cap-common.jar',
					 'comtop-cap-metadata.jar','comtop-cap-runtime.jar',
					 'comtop-cap-view.jar','comtop-cap-graph.jar',
					 'comtop-cap-fileload.jar','comtop-cap-document.jar',
//					 'comtop-cap-graph-to-image.jar',
						'comtop-cap-cdp.jar',
					 'comtop-cap-test.jar']


ext.notRuntimeJars = ['comtop-cap-codegen.jar','comtop-cap-common.jar','comtop-cap-metadata.jar','comtop-cap-view.jar','comtop-cap-graph.jar','comtop-cap-cdp.jar',
                      'comtop-cap-graph-to-image.jar','comtop-cap-fileload.jar','comtop-cap-document.jar','comtop-cap-document-scan-1.0.jar','comtop-cap-test.jar',
                      'comtop-cap-bm-fragment.jar','freehep-graphics2d-2.2.jar','freehep-graphicsbase-2.2.jar','freehep-graphicsio-2.2.jar','freehep-graphicsio-emf-2.2.jar',
                      'freehep-graphicsio-tests-2.2.jar','freehep-io-2.2.2.jar','poi-ooxml-3.12.jar','poi-ooxml-schemas-3.12.jar','poi-scratchpad-3.12.jar','ooxml-schemas-1.1.jar',
                      'jsoup-1.8.3.jar','svnkit-1.8.3-1.jar','freemarker-2.3.20.jar','commons-compress-1.9.jar','mxgraph-all-1.10.3.jar','mxgraph-core-1.10.3.jar','mxgraph-swing-1.10.3.jar',
                      'qtjambi-core-4.8.6.jar','qtjambi-designer-4.8.6.jar','qtjambi-native-win32-msvc2012-4.8.6.jar','qtjambi-native-win64-msvc2012x64-4.8.6.jar','comtop-cip-dbpool-1.0.jar',
                      'ojdbc-6.jar','jnotify-0.94.jar'
                      ]

//删除lib里面下的cap相关包
task deleteLibCapJar << {
	capJarName.each {
		println "delete file：$webAppDir/WEB-INF/lib/$it"
		delete("$webAppDir/WEB-INF/lib/$it")
	}
}

 //删除webApp/WEB-INF/lib目录
 task cleanLibDir(type: Delete){
	 def libDir = new File("$webAppDir/WEB-INF/lib");
	 delete libDir
 }
 
 //删除webApp/WEB-INF/lib目录
 task cleanClassesDir(type: Delete){
	 def classesDir = new File("$webAppDir/WEB-INF/classes");
	 delete classesDir
 }

 
 task executCopy(dependsOn: jar) << {
	 //先删除lib目录，再把依赖的jar包拷贝到lib目录下（会自动创建lib目录）
	 copy {
		 from configurations.runtime.minus(configurations.providedRuntime)
		 into 'src/main/webapp/WEB-INF/lib'
		 include '**/*.jar'
		 //去掉top增量版本号改成5.0
		 rename (/comtop-top-(?!corm)([\w-]+)(?:-\S+)*\.jar/, 'comtop-top-$1-5\\.0\\.jar')
		 //rename 'comtop-top-corm-3.1.2.jar', 'comtop-top-corm-3.1.2.jar'
		 rename 'comtop-top-dwr-3-5.0.jar', 'comtop-top-dwr-3.jar'
		 rename 'comtop-top-login-tass-5.0.jar', 'comtop-top-login-tass-1.0.0.jar'
		 
		 //去掉soa增量版本号
		 rename 'comtop-soa-core-.+\\.jar', 'comtop-soa-core\\.jar'
		 //去掉eic增量版本号
		 rename 'eic-core-.+\\.jar', 'eic-core-1\\.0\\.6\\.jar'
		 rename 'eic-view-.+\\.jar', 'eic-view-1\\.0\\.6\\.jar'
		 //去掉bpms增量版本号
		 rename 'comtop-bpms-(.+)-.+\\.jar', 'comtop-bpms-$1\\.jar'
		 //其他依赖jar处理
		 rename 'flex-rds-server-20150427.jar', 'flex-rds-server.jar'
		 rename 'flex-messaging-(.+)-.+\\.jar', 'flex-messaging-$1\\.jar'
		 //comtop-util-eim-send-msg-1.4.109.jar -> comtop-util-eim-send-msg.jar
		 rename 'comtop-util-eim-send-msg-.+\\.jar', 'comtop-util-eim-send-msg.jar'
		 //rename 'comtop-intergrationfassets-util-.+\\.jar', 'comtop-intergrationfassets-util.jar'
		 //comtop-core-mc-1.0.2-20150906.jar -> comtop-core-mc-1.0.2.jar
		 rename 'comtop-core-mc-1.0.2-.+\\.jar', 'comtop-core-mc-1.0.2.jar'
	 }
 }
 
/**
 *copy各个java工程编译后的文件到webApp工程的WEB-INF/classes下面
 */
task copyDependenciesJarToWebApp() << {
	 if(!isPack) {
		 //排除项目自身的jar包，如果jar名称改变，这里的脚本也需要变
//		 exclude capJarName
		 capJarName.each {
				println "delete file：$webAppDir/WEB-INF/lib/$it"
				delete("$webAppDir/WEB-INF/lib/$it")
		}
	 }
}

//设置依赖任务
copyDependenciesJarToWebApp.dependsOn 'cleanClassesDir','cleanLibDir','executCopy'

copyDependenciesJarToWebApp {
	ext.isPack = false
}

/**
 * 构建运行时的环境（把建模的jar以及建模依赖的去掉）
 */
task copyRuntimeJarsToWebApp() << {
	//exclude notRuntimeJars;
	notRuntimeJars.each {
		println "delete file：$webAppDir/WEB-INF/lib/$it"
		delete("$webAppDir/WEB-INF/lib/$it")
	}
}
copyRuntimeJarsToWebApp.dependsOn 'cleanClassesDir','cleanLibDir','executCopy'

/**
 * 构建cap发布包
 */
task buildCapRelease(type:Zip) {
	dependsOn 'copyDependenciesJarToWebApp'
	dependsOn 'clearDistZip'
	archiveName="CAP_V${currentVersion}_" + new Date().format('yyyyMMdd_HHmm') + '.zip'
	def targetProjectName = 'CAP'
	//java目录
	into("$targetProjectName/src/main/java"){
		from 'src/main/java'
	}
	//resources目录
	into("$targetProjectName/src/main/resources"){
		from 'src/main/resources'
	}
	
	//webapp目录
	into("$targetProjectName/src/main/webapp"){
		from 'src/main/webapp'
		exclude '**/classes'
	}
	
	//gradle 配置
	into("$targetProjectName"){
		from "${rootProject.projectDir}/targetProject/gradeConfig"
	}
	
	//eclipse 配置
	into("$targetProjectName"){
		from "${rootProject.projectDir}/targetProject/eclipseConfig"
	}
	
	//cui wab app
	into("cui-webapp"){
		from "${rootProject.projectDir}/cui-webapp"
	}
}

//清除distributions目录下的zip包
task clearDistZip() << {
	delete("$buildDir/$distsDirName")
}
clearDistZip.mustRunAfter copyDependenciesJarToWebApp

//构建ear包
task distEarZip(type:Zip){
	dependsOn 'copyDependenciesJarToWebApp'
    baseName='CAP_MODEL_Build'+deployPackageTime+'_V'
    from 'src/main/application'
    into('web'){
        from 'src/main/webapp'
    }

    into('APP-INF/lib'){
       from 'src/main/webapp/WEB-INF/lib'
    }
    
    into('APP-INF/classes'){
       from 'build/resources/main/'
       exclude 'com/','META-INF/'
    }
}

//执行完distEarZip需要去掉lib里cap相关jar包保证开发环境正常使用
distEarZip.doLast {
	tasks.deleteLibCapJar.execute()
}

//运行gradle任务之前得到所有任务执行视图
gradle.taskGraph.whenReady {taskGraph ->
	if (taskGraph.hasTask(distEarZip) || taskGraph.hasTask(buildCapRelease)) {
		copyDependenciesJarToWebApp.isPack = true
	}
}

//apply plugin: 'war'

//webAPP工程打war包命令
//war{
	//先把工程的classes目录和lib目录干掉。让gradle去分析依赖自动打war包
	//所以，打war包之后，所有工程需要重新编译（clean）以及执行copyDependenciesJarToWebApp任务才能正常启动服务
	//打包命令请勿与其他任务一起执行。
//	dependsOn 'cleanClassesDir'
//	dependsOn 'cleanLibDir'
	//dependsOn 'copyDependenciesJarToWebApp'
	//classpath 'src/main/webapp/WEB-INF/lib' 
//}

javadoc{

}