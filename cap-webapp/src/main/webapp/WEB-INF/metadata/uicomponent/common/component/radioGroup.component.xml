<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<component>
    <modelId>uicomponent.common.component.radioGroup</modelId>
    <modelName>RadioGroup</modelName>
    <modelPackage>uicomponent.common</modelPackage>
    <modelType>component</modelType>
    <cname>单选框</cname>
	<group>common</group>
	<description>RadioGroup组件</description>
	<propertyEditor>auto</propertyEditor>
	<propertyEditorPage></propertyEditorPage>
	<hasInputType>true</hasInputType>
	<sort>8</sort>
	<js>
		<list>/cap/rt/common/cui/js/comtop.ui.min.js</list>
		<list>/cap/rt/common/cui/js/cui.extend.dictionary.js</list>
	</js>
	<css>
		<list>/cap/rt/common/cui/themes/default/css/comtop.ui.min.css</list>
	</css>
	<layoutType>
		<list>form</list>
		<list>edittype</list>
	</layoutType>
	<properties>
		<property>
			<cname>类型</cname>
			<ename>uitype</ename>
			<type>String</type>
			<requried>false</requried>
			<default>RadioGroup</default>
			<description>组件类型。</description>
			<commonAttr>false</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'uitype',
						'name': 'uitype',
						'ng-model':'data.uitype'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>名称</cname>
			<ename>name</ename>
			<type>String</type>
			<requried>true</requried>
			<default></default>
			<description>组件名称，默认为空。</description>
			<commonAttr>true</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'name',
						'name': 'name',
						'ng-model':'data.name',
						'validate': "[{type:'required',rule:{m:'不能为空'}}]"
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>数据绑定</cname>
			<ename>databind</ename>
			<type>String</type>
			<requried>false</requried>
			<default></default>
			<description>创建json对像，并在要绑定的组件上用databind关联绑定属性。</description>
			<commonAttr>true</commonAttr>
			<!--数据模型-->
			<propertyEditorUI>
				<componentName>cui_clickinput</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'databind',
						'name': 'databind',
						'ng-model':'data.databind',
						'on_iconclick':'openDataStoreSelect'
					}
				]]>
				</script>
			</propertyEditorUI>
			<consistencyConfig>
				<checkConsistency>true</checkConsistency>
				<checkClass>com.comtop.cap.bm.metadata.consistency.component.attribute.DataStoreComponentAttrConsisCheck</checkClass>
			</consistencyConfig>
		</property>
		<property>
			<cname>验证规则</cname>
			<ename>validate</ename>
			<type>Json</type>
			<requried>false</requried>
			<default></default>
			<description>校验函数，如：<![CDATA[<br/>[<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'type':'required', 'rule':{m: '不能为空'}}<br/>]]]></description>
			<commonAttr>true</commonAttr>
			<!--数据模型-->
			<propertyEditorUI>
				<componentName>cui_clickinput</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'validate',
						'name': 'validate',
						'ng-model':'data.validate',
						'on_iconclick':'openValidateAreaWindow'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>数据字典</cname>
			<ename>dictionary</ename>
			<type>String</type>
			<requried>false</requried>
			<default></default>
			<description>用于读取数据字典作为数据源，接收数据字典的全编码。</description>
			<commonAttr>true</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_clickinput</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'dictionary',
						'name': 'dictionary',
						'ng-model':'data.dictionary',
						'on_iconclick': 'openDictionarySelect'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>枚举数据</cname>
			<ename>enumdata</ename>
			<type>String</type>
			<requried>false</requried>
			<default></default>
			<description>用于从枚举类中读取数据源，接收枚举类的全路径。如：com.comtop.lcam.ColorEnum。</description>
			<commonAttr>true</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'enumdata',
						'name': 'enumdata',
						'emptytext': '请输入枚举类路径',
						'ng-model':'data.enumdata',
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>列表</cname>
			<ename>radio_list</ename>
			<type>Json</type>
			<requried>false</requried>
			<default></default>
			<description>radio列表，例如 <![CDATA[<br/>[<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{text: '显示文本1', readonly: 'readonly', value: 'Item值1'},<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{text: '显示文本2', value: 'Item值2'}<br/>]]]></description>
			<commonAttr>false</commonAttr>
			<!--数据模型-->
			<propertyEditorUI>
				<componentName>cui_clickinput</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'radio_list',
						'name': 'radio_list',
						'ng-model':'data.radio_list',
						'on_iconclick':'openCodeEditAreaWindow'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>排列方向</cname>
			<ename>direction</ename>
			<type>String</type>
			<requried>false</requried>
			<default></default>
			<description>排列方向，可选值有：horizontal、vertical。</description>
			<commonAttr>false</commonAttr>
			<!--可选可填下拉框-->
			<propertyEditorUI>
				<componentName>cui_pulldown</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'direction',
						'mode': 'Single',
						'value_field':'id',
						'label_field':'text',
						'name':'direction',
						'ng-model':'data.direction',
						'datasource' :"[{id:'horizontal',text:'横向'},{id:'vertical',text:'纵向'}]"
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>默认选中项</cname>
			<ename>value</ename>
			<type>String</type>
			<requried>false</requried>
			<description>选择的radio的值，例如'1'</description>
			<commonAttr>false</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'value',
						'name': 'value',
						'ng-model':'data.value'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>只读</cname>
			<ename>readonly</ename>
			<type>Boolean</type>
			<requried>false</requried>
			<default></default>
			<description>是否只读，会覆盖初始化时的readonly属性。</description>
			<commonAttr>false</commonAttr>
			<!--可选可填下拉框-->
			<propertyEditorUI>
				<componentName>cui_pulldown</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'readonly',
						'mode': 'Single',
						'value_field':'id',
						'label_field':'text',
						'name':'readonly',
						'ng-model':'data.readonly',
						'datasource' :"[{id:'true',text:'只读'},{id:'false',text:'可读写'}]"
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>选中的字体颜色</cname>
			<ename>color</ename>
			<type>String</type>
			<requried>false</requried>
			<default></default>
			<description>复选框被选中时，对应标签文本字体颜色。</description>
			<commonAttr>false</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'color',
						'name': 'color',
						'ng-model':'data.color'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>选择项换行</cname>
			<ename>br</ename>
			<type>Json</type>
			<requried>false</requried>
			<default></default>
			<description>checkbox选择项换行。如：[1, 5]表示第2个和第6个checkbox之前换行。</description>
			<commonAttr>false</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'br',
						'name': 'br',
						'ng-model':'data.br'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>边框</cname>
			<ename>border</ename>
			<type>Boolean</type>
			<requried>false</requried>
			<default></default>
			<description>是否显示边框。</description>
			<commonAttr>false</commonAttr>
			<!--单选框-->
			<propertyEditorUI>
				<componentName>cui_radiogroup</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'border',
						'name': 'border',
						'radio_list': [{
							'text': '显示',
							'value': true
						},{
							'text': '不显示',
							'value': false
						}],
						'ng-model':'data.border'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>模式</cname>
			<ename>textmode</ename>
			<type>Boolean</type>
			<requried>false</requried>
			<default></default>
			<description>是否为文本模式。</description>
			<commonAttr>false</commonAttr>
			<!--可选可填下拉框-->
			<propertyEditorUI>
				<componentName>cui_pulldown</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'textmode',
						'mode': 'Single',
						'value_field':'id',
						'label_field':'text',
						'name':'textmode',
						'ng-model':'data.textmode',
						'datasource' :"[{id:'true',text:'文本模式'},{id:'false',text:'非文本模式'}]"
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>显示文本</cname>
			<ename>label</ename>
			<type>String</type>
			<requried>false</requried>
			<default>单选框</default>
			<description>组件label名称。</description>
			<commonAttr>false</commonAttr>
			<generateCodeIgnore>true</generateCodeIgnore>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'label',
						'name': 'label',
						'ng-model':'data.label',
						'value': '单选框'
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
		<property>
			<cname>id</cname>
			<ename>id</ename>
			<type>String</type>
			<requried>false</requried>
			<default></default>
			<description>组件id</description>
			<commonAttr>false</commonAttr>
			<!--文本框-->
			<propertyEditorUI>
				<componentName>cui_input</componentName>
				<script>
				<![CDATA[ 
					{
						'id': 'id',
						'name': 'id',
						'ng-model':'data.id',
						'validate': "[{type:'custom',rule:{against:'isExistComponentId', m:'该id值已存在，请修改'}}]"
					}
				]]>
				</script>
			</propertyEditorUI>
		</property>
	</properties>
	<events>
		<event>
			<cname>内容更改事件</cname>
	        <ename>on_change</ename>
	        <type></type>
			<default></default>
	        <methodTemplate>actionlibrary.eventAction.radioGroupAction.action.radioGroupChange</methodTemplate>
	        <methodOption></methodOption>
	        <description>CheckboxGroup的值改变时的回调函数，回调参数为当前值。</description>
	        <commonAttr>true</commonAttr>
		</event>
	</events>
	<consistencyConfig>
		<checkConsistency>true</checkConsistency>
		<objectClassName>ComponentVO</objectClassName>
		<checkScope>currentObject</checkScope>
		<checkClass>com.comtop.cap.bm.metadata.consistency.component.DefaultComponentConsisCheck</checkClass>
		<expression></expression>
	</consistencyConfig>
</component>